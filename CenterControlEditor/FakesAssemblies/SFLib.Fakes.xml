<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SFLib.Fakes</name>
    </assembly>
    <members>
        <member name="T:SFLib.Fakes.ShimCheckRunner">
            <summary>SFLib.CheckRunner 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckRunner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckRunner.#ctor(SFLib.CheckRunner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckRunner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckRunner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckRunner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckRunner.ConstructorInt32CheckRunnerCheckDelegateCheckRunnerRunDelegateInt32">
            <summary>设置 CheckRunner.CheckRunner(Int32 interval, CheckDelegate checkFunction, RunDelegate runFunction, Int32 maxCheckCount) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckRunner._ctorb__0ObjectElapsedEventArgs">
            <summary>设置 CheckRunner.&lt;.ctor&gt;b__0(Object sender, ElapsedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimCheckRunner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckRunner.AllInstances._ctorb__0ObjectElapsedEventArgs">
            <summary>设置 CheckRunner.&lt;.ctor&gt;b__0(Object sender, ElapsedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimCheckSpecialChar">
            <summary>SFLib.CheckSpecialChar 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckSpecialChar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckSpecialChar.#ctor(SFLib.CheckSpecialChar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckSpecialChar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimCheckSpecialChar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckSpecialChar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckSpecialChar.CheckParamsString">
            <summary>设置 CheckSpecialChar.CheckParams(String arg) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimCheckSpecialChar.Constructor">
            <summary>设置 CheckSpecialChar.CheckSpecialChar() 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimCheckSpecialChar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimComLib">
            <summary>SFLib.ComLib 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimComLib.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimComLib.#ctor(SFLib.ComLib)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimComLib.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimComLib.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimComLib.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimComLib.Constructor">
            <summary>设置 ComLib.ComLib() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimComLib.SendComDataStringInt32Int32Int32StringByteArray">
            <summary>设置 ComLib.SendComData(String targetPort, Int32 baudrate, Int32 databit, Int32 stopbit, String partiy, Byte[] bufferData) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimComLib.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimEnumHelper">
            <summary>SFLib.EnumHelper 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimEnumHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimEnumHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimEnumHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimEnumHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimEnumHelper.GetEnumDescriptionObject">
            <summary>设置 EnumHelper.GetEnumDescription(Object enumSubitem) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimIniFile">
            <summary>SFLib.IniFile 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIniFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIniFile.#ctor(SFLib.IniFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIniFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIniFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ConstructorString">
            <summary>设置 IniFile.IniFile(String filename) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.IsFileExit">
            <summary>设置 IniFile.IsFileExit() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ReadBoolStringStringBoolean">
            <summary>设置 IniFile.ReadBool(String section, String key, Boolean defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ReadFloatStringStringSingle">
            <summary>设置 IniFile.ReadFloat(String section, String key, Single defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ReadIntegerStringStringInt32">
            <summary>设置 IniFile.ReadInteger(String section, String key, Int32 defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ReadStringStringStringString">
            <summary>设置 IniFile.ReadString(String section, String key, String defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.ReadValueStringString">
            <summary>设置 IniFile.ReadValue(String section, String key) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.WriteBoolStringStringBoolean">
            <summary>设置 IniFile.WriteBool(String section, String key, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.WriteFloatStringStringSingle">
            <summary>设置 IniFile.WriteFloat(String section, String key, Single value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.WriteIntegerStringStringInt32">
            <summary>设置 IniFile.WriteInteger(String section, String key, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.WriteStringStringStringString">
            <summary>设置 IniFile.WriteString(String section, String key, String value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.WriteValueStringStringString">
            <summary>设置 IniFile.WriteValue(String section, String key, String value) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimIniFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.IsFileExit">
            <summary>设置 IniFile.IsFileExit() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.ReadBoolStringStringBoolean">
            <summary>设置 IniFile.ReadBool(String section, String key, Boolean defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.ReadFloatStringStringSingle">
            <summary>设置 IniFile.ReadFloat(String section, String key, Single defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.ReadIntegerStringStringInt32">
            <summary>设置 IniFile.ReadInteger(String section, String key, Int32 defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.ReadStringStringStringString">
            <summary>设置 IniFile.ReadString(String section, String key, String defualt) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.ReadValueStringString">
            <summary>设置 IniFile.ReadValue(String section, String key) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.WriteBoolStringStringBoolean">
            <summary>设置 IniFile.WriteBool(String section, String key, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.WriteFloatStringStringSingle">
            <summary>设置 IniFile.WriteFloat(String section, String key, Single value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.WriteIntegerStringStringInt32">
            <summary>设置 IniFile.WriteInteger(String section, String key, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.WriteStringStringStringString">
            <summary>设置 IniFile.WriteString(String section, String key, String value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIniFile.AllInstances.WriteValueStringStringString">
            <summary>设置 IniFile.WriteValue(String section, String key, String value) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimIp">
            <summary>SFLib.Ip 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimIp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimIp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimIp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimLogFileTraceListener">
            <summary>SFLib.LogFileTraceListener 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogFileTraceListener.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogFileTraceListener.#ctor(SFLib.LogFileTraceListener)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogFileTraceListener.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogFileTraceListener.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogFileTraceListener.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.CleanEarlyLogString">
            <summary>设置 LogFileTraceListener.CleanEarlyLog(String folderPath) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.Constructor">
            <summary>设置 LogFileTraceListener.LogFileTraceListener() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.GetTodayLogFileName">
            <summary>设置 LogFileTraceListener.GetTodayLogFileName() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.WriteLineString">
            <summary>设置 LogFileTraceListener.WriteLine(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.WriteString">
            <summary>设置 LogFileTraceListener.Write(String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimLogFileTraceListener.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.AllInstances.CleanEarlyLogString">
            <summary>设置 LogFileTraceListener.CleanEarlyLog(String folderPath) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.AllInstances.GetTodayLogFileName">
            <summary>设置 LogFileTraceListener.GetTodayLogFileName() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.AllInstances.WriteLineString">
            <summary>设置 LogFileTraceListener.WriteLine(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogFileTraceListener.AllInstances.WriteString">
            <summary>设置 LogFileTraceListener.Write(String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimLogger">
            <summary>SFLib.Logger 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ErrorException">
            <summary>设置 Logger.Error(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ErrorString">
            <summary>设置 Logger.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ExceptionException">
            <summary>设置 Logger.Exception(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ExceptionString">
            <summary>设置 Logger.Exception(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ExitException">
            <summary>设置 Logger.Exit(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ExitString">
            <summary>设置 Logger.Exit(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.InfoString">
            <summary>设置 Logger.Info(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.QuietlyExitException">
            <summary>设置 Logger.QuietlyExit(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.QuietlyExitString">
            <summary>设置 Logger.QuietlyExit(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.RegisterConsoleListener">
            <summary>设置 Logger.RegisterConsoleListener() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.RegisterTextBoxListenerTextBoxBaseInt32">
            <summary>设置 Logger.RegisterTextBoxListener(TextBoxBase output, Int32 logMaxLine) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.RegisterTextWriterListener">
            <summary>设置 Logger.RegisterTextWriterListener() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.StaticConstructor">
            <summary>设置 Logger.Logger() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ThrowException">
            <summary>设置 Logger.Throw(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.ThrowString">
            <summary>设置 Logger.Throw(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.WarningString">
            <summary>设置 Logger.Warning(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimLogger.WriteEntryStringString">
            <summary>设置 Logger.WriteEntry(String message, String type) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimNetLib">
            <summary>SFLib.NetLib 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimNetLib.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimNetLib.#ctor(SFLib.NetLib)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimNetLib.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimNetLib.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.BroadcastUdpDataInt32ByteArray">
            <summary>设置 NetLib.BroadcastUdpData(Int32 targetPort, Byte[] udpData) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.CheckSumByteArray">
            <summary>设置 NetLib.CheckSum(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.Constructor">
            <summary>设置 NetLib.NetLib() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.GetEncryBytesString">
            <summary>设置 NetLib.GetEncryBytes(String str) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.GetIpv4StringFromNetworkAdapterStringNetworkInterface">
            <summary>设置 NetLib.GetIpv4StringFromNetworkAdapter(String result, NetworkInterface adapter) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.GetLocalIpString">
            <summary>设置 NetLib.GetLocalIpString() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.HttpRequestString">
            <summary>设置 NetLib.HttpRequest(String reuqestURL) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.SendTcpDataStringInt32ByteArray">
            <summary>设置 NetLib.SendTcpData(String targetIP, Int32 targetPort, Byte[] tcpData) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib.SendUdpDataStringInt32ByteArray">
            <summary>设置 NetLib.SendUdpData(String targetIP, Int32 targetPort, Byte[] udpData) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib._CheckSumb__0Byte">
            <summary>设置 NetLib.&lt;CheckSum&gt;b__0(Byte x) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimNetLib._GetEncryBytesb__2Byte">
            <summary>设置 NetLib.&lt;GetEncryBytes&gt;b__2(Byte x) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimNetLib.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimPublicWindowsApi">
            <summary>SFLib.PublicWindowsApi 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimPublicWindowsApi.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimPublicWindowsApi.#ctor(SFLib.PublicWindowsApi)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimPublicWindowsApi.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimPublicWindowsApi.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimPublicWindowsApi.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimPublicWindowsApi.Constructor">
            <summary>设置 PublicWindowsApi.PublicWindowsApi() 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimPublicWindowsApi.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimSFReturnCode">
            <summary>SFLib.SFReturnCode 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimSFReturnCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimSFReturnCode.#ctor(SFLib.SFReturnCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimSFReturnCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimSFReturnCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimSFReturnCode.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.CodeGet">
            <summary>设置 SFReturnCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.Constructor">
            <summary>设置 SFReturnCode.SFReturnCode() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.ConstructorInt32String">
            <summary>设置 SFReturnCode.SFReturnCode(Int32 code, String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.ConstructorString">
            <summary>设置 SFReturnCode.SFReturnCode(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.ConstructorStringException">
            <summary>设置 SFReturnCode.SFReturnCode(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.MessageGet">
            <summary>设置 SFReturnCode.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.SetReturnCodeInt32String">
            <summary>设置 SFReturnCode.SetReturnCode(Int32 code, String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimSFReturnCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.AllInstances.CodeGet">
            <summary>设置 SFReturnCode.get_Code() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.AllInstances.MessageGet">
            <summary>设置 SFReturnCode.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimSFReturnCode.AllInstances.SetReturnCodeInt32String">
            <summary>设置 SFReturnCode.SetReturnCode(Int32 code, String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTcpClientWithTimeout">
            <summary>SFLib.TcpClientWithTimeout 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTcpClientWithTimeout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTcpClientWithTimeout.#ctor(SFLib.TcpClientWithTimeout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTcpClientWithTimeout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTcpClientWithTimeout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.BeginConnect">
            <summary>设置 TcpClientWithTimeout.BeginConnect() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.Connect">
            <summary>设置 TcpClientWithTimeout.Connect() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.ConstructorStringInt32Int32">
            <summary>设置 TcpClientWithTimeout.TcpClientWithTimeout(String hostname, Int32 port, Int32 timeout_milliseconds) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTcpClientWithTimeout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.AllInstances.BeginConnect">
            <summary>设置 TcpClientWithTimeout.BeginConnect() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTcpClientWithTimeout.AllInstances.Connect">
            <summary>设置 TcpClientWithTimeout.Connect() 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTextBoxTraceListener">
            <summary>SFLib.TextBoxTraceListener 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTextBoxTraceListener.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTextBoxTraceListener.#ctor(SFLib.TextBoxTraceListener)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTextBoxTraceListener.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTextBoxTraceListener.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTextBoxTraceListener.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AppendLineStringBuilderString">
            <summary>设置 TextBoxTraceListener.AppendLine(StringBuilder sb, String content) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AppendString">
            <summary>设置 TextBoxTraceListener.Append(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.CheckLogMaxLineForTextChangedEvent">
            <summary>设置 TextBoxTraceListener.CheckLogMaxLineForTextChangedEvent() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.ConstructorTextBoxBaseInt32">
            <summary>设置 TextBoxTraceListener.TextBoxTraceListener(TextBoxBase output, Int32 logMaxLine) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.WriteLineString">
            <summary>设置 TextBoxTraceListener.WriteLine(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.WriteString">
            <summary>设置 TextBoxTraceListener.Write(String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances.AppendLineStringBuilderString">
            <summary>设置 TextBoxTraceListener.AppendLine(StringBuilder sb, String content) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances.AppendString">
            <summary>设置 TextBoxTraceListener.Append(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances.CheckLogMaxLineForTextChangedEvent">
            <summary>设置 TextBoxTraceListener.CheckLogMaxLineForTextChangedEvent() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances.WriteLineString">
            <summary>设置 TextBoxTraceListener.WriteLine(String message) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTextBoxTraceListener.AllInstances.WriteString">
            <summary>设置 TextBoxTraceListener.Write(String message) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimThreadProtecter">
            <summary>SFLib.ThreadProtecter 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimThreadProtecter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimThreadProtecter.#ctor(SFLib.ThreadProtecter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimThreadProtecter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimThreadProtecter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.Constructor">
            <summary>设置 ThreadProtecter.ThreadProtecter() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.IsTimeoutGet">
            <summary>设置 ThreadProtecter.get_IsTimeout() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.IsTimeoutSetBoolean">
            <summary>设置 ThreadProtecter.set_IsTimeout(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.KillCountGet">
            <summary>设置 ThreadProtecter.get_KillCount() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.KillCountSetInt32">
            <summary>设置 ThreadProtecter.set_KillCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.StaticConstructor">
            <summary>设置 ThreadProtecter.ThreadProtecter() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.Stop">
            <summary>设置 ThreadProtecter.Stop() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.getInstance">
            <summary>设置 ThreadProtecter.getInstance() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.getInstanceInt32">
            <summary>设置 ThreadProtecter.getInstance(Int32 originalKillCount) 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimThreadProtecter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.AllInstances.IsTimeoutGet">
            <summary>设置 ThreadProtecter.get_IsTimeout() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.AllInstances.IsTimeoutSetBoolean">
            <summary>设置 ThreadProtecter.set_IsTimeout(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.AllInstances.KillCountGet">
            <summary>设置 ThreadProtecter.get_KillCount() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.AllInstances.KillCountSetInt32">
            <summary>设置 ThreadProtecter.set_KillCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimThreadProtecter.AllInstances.Stop">
            <summary>设置 ThreadProtecter.Stop() 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTransFileName">
            <summary>SFLib.TransFileName 的填充码类型</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTransFileName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTransFileName.#ctor(SFLib.TransFileName)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTransFileName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SFLib.Fakes.ShimTransFileName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTransFileName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTransFileName.Char2HexFileNameString">
            <summary>设置 TransFileName.Char2HexFileName(String fileName) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTransFileName.Constructor">
            <summary>设置 TransFileName.TransFileName() 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTransFileName.Hex2CharFileNameString">
            <summary>设置 TransFileName.Hex2CharFileName(String hex) 的 填充码</summary>
        </member>
        <member name="P:SFLib.Fakes.ShimTransFileName.Sample">
            <summary>设置 TransFileName.Sample() 的 填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.ShimTransFileName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SFLib.Fakes.StubCheckRunner">
            <summary>SFLib.CheckRunner 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubCheckRunner.#ctor(System.Int32,SFLib.CheckRunner.CheckDelegate,SFLib.CheckRunner.RunDelegate,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubCheckRunner.InitializeStub">
            <summary>初始化 type StubCheckRunner 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckRunner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckRunner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckRunner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubCheckSpecialChar">
            <summary>SFLib.CheckSpecialChar 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubCheckSpecialChar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubCheckSpecialChar.InitializeStub">
            <summary>初始化 type StubCheckSpecialChar 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckSpecialChar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckSpecialChar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubCheckSpecialChar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubComLib">
            <summary>SFLib.ComLib 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubComLib.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubComLib.InitializeStub">
            <summary>初始化 type StubComLib 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubComLib.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubComLib.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubComLib.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubIniFile">
            <summary>SFLib.IniFile 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubIniFile.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubIniFile.InitializeStub">
            <summary>初始化 type StubIniFile 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubIniFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubIniFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubIniFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubLogFileTraceListener">
            <summary>SFLib.LogFileTraceListener 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.AttachBackingFieldToName">
            <summary>附加委托以将 StubLogFileTraceListener.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Close">
            <summary>设置 TraceListener.Close() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.Close01">
            <summary>设置 TraceListener.Close() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Dispose(System.Boolean)">
            <summary>设置 TraceListener.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.DisposeBoolean">
            <summary>设置 TraceListener.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Fail(System.String)">
            <summary>设置 TraceListener.Fail(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Fail(System.String,System.String)">
            <summary>设置 TraceListener.Fail(String message, String detailMessage) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.FailString">
            <summary>设置 TraceListener.Fail(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.FailStringString">
            <summary>设置 TraceListener.Fail(String message, String detailMessage) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Flush">
            <summary>设置 TraceListener.Flush() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.Flush01">
            <summary>设置 TraceListener.Flush() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.GetSupportedAttributes">
            <summary>设置 TraceListener.GetSupportedAttributes() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.GetSupportedAttributes01">
            <summary>设置 TraceListener.GetSupportedAttributes() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.InitializeStub">
            <summary>初始化 type StubLogFileTraceListener 的新实例</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.IsThreadSafeGet">
            <summary>设置 TraceListener.get_IsThreadSafe() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.NameGet">
            <summary>设置 TraceListener.get_Name() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.NameSetString">
            <summary>设置 TraceListener.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>设置 TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>设置 TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Write(System.Object)">
            <summary>设置 TraceListener.Write(Object o) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Write(System.String)">
            <summary>设置 LogFileTraceListener.Write(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Write(System.Object,System.String)">
            <summary>设置 TraceListener.Write(Object o, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.Write(System.String,System.String)">
            <summary>设置 TraceListener.Write(String message, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.WriteIndent">
            <summary>设置 TraceListener.WriteIndent() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteIndent01">
            <summary>设置 TraceListener.WriteIndent() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.WriteLine(System.Object)">
            <summary>设置 TraceListener.WriteLine(Object o) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.WriteLine(System.String)">
            <summary>设置 LogFileTraceListener.WriteLine(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.WriteLine(System.Object,System.String)">
            <summary>设置 TraceListener.WriteLine(Object o, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubLogFileTraceListener.WriteLine(System.String,System.String)">
            <summary>设置 TraceListener.WriteLine(String message, String category) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteLineObject">
            <summary>设置 TraceListener.WriteLine(Object o) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteLineObjectString">
            <summary>设置 TraceListener.WriteLine(Object o, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteLineString">
            <summary>设置 LogFileTraceListener.WriteLine(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteLineStringString">
            <summary>设置 TraceListener.WriteLine(String message, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteObject">
            <summary>设置 TraceListener.Write(Object o) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteObjectString">
            <summary>设置 TraceListener.Write(Object o, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteString">
            <summary>设置 LogFileTraceListener.Write(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubLogFileTraceListener.WriteStringString">
            <summary>设置 TraceListener.Write(String message, String category) 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubLogFileTraceListener.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubLogFileTraceListener.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubLogFileTraceListener.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubLogFileTraceListener.IsThreadSafe">
            <summary>设置 TraceListener.get_IsThreadSafe() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubLogFileTraceListener.Name">
            <summary>设置 TraceListener.get_Name() 的 stub</summary>
        </member>
        <member name="T:SFLib.Fakes.StubNetLib">
            <summary>SFLib.NetLib 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubNetLib.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubNetLib.InitializeStub">
            <summary>初始化 type StubNetLib 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubNetLib.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubNetLib.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubNetLib.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubPublicWindowsApi">
            <summary>SFLib.PublicWindowsApi 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubPublicWindowsApi.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubPublicWindowsApi.InitializeStub">
            <summary>初始化 type StubPublicWindowsApi 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubPublicWindowsApi.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubPublicWindowsApi.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubPublicWindowsApi.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubSFReturnCode">
            <summary>SFLib.SFReturnCode 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.#ctor(System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSFReturnCode.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSFReturnCode.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.InitializeStub">
            <summary>初始化 type StubSFReturnCode 的新实例</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.MessageGet">
            <summary>设置 SFReturnCode.get_Message() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubSFReturnCode.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubSFReturnCode.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.Message">
            <summary>设置 SFReturnCode.get_Message() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubSFReturnCode.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SFLib.Fakes.StubTcpClientWithTimeout">
            <summary>SFLib.TcpClientWithTimeout 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTcpClientWithTimeout.#ctor(System.String,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTcpClientWithTimeout.InitializeStub">
            <summary>初始化 type StubTcpClientWithTimeout 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTcpClientWithTimeout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTcpClientWithTimeout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTcpClientWithTimeout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SFLib.Fakes.StubTextBoxTraceListener">
            <summary>SFLib.TextBoxTraceListener 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.#ctor(System.Windows.Forms.TextBoxBase,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.AttachBackingFieldToName">
            <summary>附加委托以将 StubTextBoxTraceListener.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Close">
            <summary>设置 TraceListener.Close() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.Close01">
            <summary>设置 TraceListener.Close() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Dispose(System.Boolean)">
            <summary>设置 TraceListener.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.DisposeBoolean">
            <summary>设置 TraceListener.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Fail(System.String)">
            <summary>设置 TraceListener.Fail(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Fail(System.String,System.String)">
            <summary>设置 TraceListener.Fail(String message, String detailMessage) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.FailString">
            <summary>设置 TraceListener.Fail(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.FailStringString">
            <summary>设置 TraceListener.Fail(String message, String detailMessage) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Flush">
            <summary>设置 TraceListener.Flush() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.Flush01">
            <summary>设置 TraceListener.Flush() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.GetSupportedAttributes">
            <summary>设置 TraceListener.GetSupportedAttributes() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.GetSupportedAttributes01">
            <summary>设置 TraceListener.GetSupportedAttributes() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.InitializeStub">
            <summary>初始化 type StubTextBoxTraceListener 的新实例</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.IsThreadSafeGet">
            <summary>设置 TraceListener.get_IsThreadSafe() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.NameGet">
            <summary>设置 TraceListener.get_Name() 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.NameSetString">
            <summary>设置 TraceListener.set_Name(String value) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>设置 TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>设置 TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>设置 TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>设置 TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId) 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Write(System.Object)">
            <summary>设置 TraceListener.Write(Object o) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Write(System.String)">
            <summary>设置 TextBoxTraceListener.Write(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Write(System.Object,System.String)">
            <summary>设置 TraceListener.Write(Object o, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.Write(System.String,System.String)">
            <summary>设置 TraceListener.Write(String message, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.WriteIndent">
            <summary>设置 TraceListener.WriteIndent() 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteIndent01">
            <summary>设置 TraceListener.WriteIndent() 的 stub</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.WriteLine(System.Object)">
            <summary>设置 TraceListener.WriteLine(Object o) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.WriteLine(System.String)">
            <summary>设置 TextBoxTraceListener.WriteLine(String message) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.WriteLine(System.Object,System.String)">
            <summary>设置 TraceListener.WriteLine(Object o, String category) 的 存根</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTextBoxTraceListener.WriteLine(System.String,System.String)">
            <summary>设置 TraceListener.WriteLine(String message, String category) 的 存根</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteLineObject">
            <summary>设置 TraceListener.WriteLine(Object o) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteLineObjectString">
            <summary>设置 TraceListener.WriteLine(Object o, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteLineString">
            <summary>设置 TextBoxTraceListener.WriteLine(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteLineStringString">
            <summary>设置 TraceListener.WriteLine(String message, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteObject">
            <summary>设置 TraceListener.Write(Object o) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteObjectString">
            <summary>设置 TraceListener.Write(Object o, String category) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteString">
            <summary>设置 TextBoxTraceListener.Write(String message) 的 stub</summary>
        </member>
        <member name="F:SFLib.Fakes.StubTextBoxTraceListener.WriteStringString">
            <summary>设置 TraceListener.Write(String message, String category) 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTextBoxTraceListener.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTextBoxTraceListener.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTextBoxTraceListener.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTextBoxTraceListener.IsThreadSafe">
            <summary>设置 TraceListener.get_IsThreadSafe() 的 stub</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTextBoxTraceListener.Name">
            <summary>设置 TraceListener.get_Name() 的 stub</summary>
        </member>
        <member name="T:SFLib.Fakes.StubTransFileName">
            <summary>SFLib.TransFileName 的存根类型</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTransFileName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SFLib.Fakes.StubTransFileName.InitializeStub">
            <summary>初始化 type StubTransFileName 的新实例</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTransFileName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTransFileName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SFLib.Fakes.StubTransFileName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
